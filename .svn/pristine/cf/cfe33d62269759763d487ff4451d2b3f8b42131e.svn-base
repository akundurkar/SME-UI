/*global define*/

define([
        'jquery',
        'datatables', 
        'dataTablescolVis',
        'dataTablestableTools',
        'dataTablesbootstrap',
        'datatablesresponsive',
        '../models/commonModel',
        '../collections/commonCollection',  
        'views/bookOrderView',
        'views/orderStatusView',
        'text!../templates/client/clients.html',
        'text!../templates/client/newClients.html',
        'text!../templates/client/clientsProfile.html',
        'text!../templates/client/editClients.html',
        'text!../templates/client/contact.html',
        'text!../templates/client/showFeedBack.html',
        'text!../templates/bookOrder/bookOrder.html'
      
        
], function ($,
		D1,D2,D3,D4,D5,
		CommonModel,
		CommonCollection,
		BookOrderView,
		OrderStatusView,
		ClientsTemplate,
		NewClientsTemplate,
		ClientsProfileTemplate,
		EditClientsTemplate,
		ContactTemplate,
		ShowFeedBackTemplate,
		bookOrderTemplate
		
		) {
	
  var ClientsView = Backbone.View.extend({
	  
    events: {
    	
	    	"click #newClients":"newClients",
	    	"click #saveNewClientsBtn":"saveNewClientsBtn",
	    	"click .viewClientProfile":"viewClientProfile",
	    	"click #editClientProfile":"editClients",
	    	"click #updateEditClientDetail":"updateEditClientDetail",
	    	"click .bookNewOrder":"bookNewOrder",
	    	"click #saveContactBtn":"saveContactBtn",
	    	"click #checkOutBtn":"bookNewOrder"	,
	    	"click #newClientCancel":"clients_info",
	    	"click #updateClientCancel":"clients_info",
	    	"click .getOrderDetailsInClient":"getOrderDetailsInClient"
    },
    

    initialize: function () {
    	
	    	this.clientCollection = new CommonCollection();
	    	this.clientEditModel = new CommonModel();	
	    	this.clientEditResModel = new CommonModel();
	    	this.updateClientEditDataModel = new CommonModel();
	    	this.updateClientAddressDataModel = new CommonModel();
	    	this.clientEditcollection = new CommonCollection();
	    	this.orderCountforClientResCollection = new CommonCollection();
	    	this.upcomingAppointmentForClientcollection = new CommonCollection();
	    	this.appointmentHistoryForClientcollection = new CommonCollection();
	    	var clientId ;
    },
    
    
    getAllClients:function(){

		var me=this;
		   
		me.clientCollection.url = CommonUtils.get("projectUrl")+"/rest/client/list?userId="+CommonUtils.getUser("userId");
	   
	    me.clientCollection.fetch({
		   
		      cache:false,
		   
		      success: function (model, response, options) {			    	
		    	
		    	                  me.renderClientsList();
  		
  	          },error:function(model, xhr, options){
  		
  		                          me.renderUsersNotFoundTemplate();  
  		                          
  	          }
  	          
	    });
	    

    },
    
    renderClientsList:function(){
    	
    	        var me = this;
       
   	            var renderData = {
   			               
   	            		clientList:me.clientCollection.models,
    		            errorMsg:"Error Message"
                
   	            }; 
   	 
   
   	            var template = _.template(ClientsTemplate);
    
                $("#showADMain").html($(this.el).html(template(renderData)));
   	 
                var responsiveHelper_dt_basic = undefined;
        		var responsiveHelper_datatable_fixed_column = undefined;
        		var responsiveHelper_datatable_col_reorder = undefined;
        		var responsiveHelper_datatable_tabletools = undefined;
        		
        		var breakpointDefinition = {
        			tablet : 1024,
        			phone : 480
        		};

        		$('#dt_basic').dataTable({
        			// Tabletools options: 
    				//   https://datatables.net/extensions/tabletools/button_options
    				"sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>"+
    						"t"+
    						"<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
    		        "oTableTools": {
    		        	 "aButtons": [
    		             "copy",
    		             "csv",
    		             "xls",
    		                {
    		                    "sExtends": "pdf",
    		                    "sTitle": "SmartAdmin_PDF",
    		                    "sPdfMessage": "SmartAdmin PDF Export",
    		                    "sPdfSize": "letter"
    		                },
    		             	{
    	                    	"sExtends": "print",
    	                    	"sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
    	                	}
    		             ],
    		            "sSwfPath": "js/plugin/datatables/swf/copy_csv_xls_pdf.swf"
    		        },
    				"autoWidth" : true,
    				"preDrawCallback" : function() {
    					// Initialize the responsive datatables helper once.
    					if (!responsiveHelper_datatable_tabletools) {
    						responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
    					}
    				},
    				"rowCallback" : function(nRow) {
    					responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
    				},
    				"drawCallback" : function(oSettings) {
    					responsiveHelper_datatable_tabletools.respond();
    				}
    			});
	    
     this.delegateEvents();

    },
    

    newClients:function(){
    	
    			var me = this;
    
    			var renderData = {					   		   
    					
    					errorMsg:"Error Message"
    			}; 
   	 
    			$("#showADMain").html($(this.el).html(_.template(NewClientsTemplate)));
    			
    			this.delegateEvents();

    },
    
    
    saveNewClientsBtn:function(){
		
		var me = this;
		
		var formData = CommonUtils.getFormObj("newClients-form"); 
		/*console.log("formData"+formData);*/
		
		var formaddress = CommonUtils.getFormObj("newClientsAddress-form");
		/*console.log("formaddress"+formaddress);*/

		
		var clientModel = new CommonModel(formData);
//	    console.log("clientModel"+clientModel);

		
		var clientAddressModel = new CommonModel(formaddress);
//    	console.log("clientAddressModel"+clientAddressModel);
		

	    var notificationSendBy = $("#notificationSendBy option:selected").val();
			
		clientModel.url= CommonUtils.get("projectUrl")+"/rest/client/addNewClient";
	
		clientModel.set("userId",CommonUtils.getUser("userId"));
		 
		var gender = $("input[name=gender]:checked").val();
		clientModel.set("gender",gender);
		
		var maritalStatus = $("input[name=maritalStatus]:checked").val();
		clientModel.set("maritalStatus",maritalStatus);
		
		
		clientModel.set("notificationSendBy",notificationSendBy);

		console.log("clientModel"+clientModel);
    	if (clientAddressModel != null)
    	{
    		
    		clientModel.set("clientAddress",clientAddressModel.get('clientAddress'));
    		clientModel.set("ownercity",clientAddressModel.get('ownercity'));
    		clientModel.set("ownerstate",clientAddressModel.get('ownerstate'));
    		clientModel.set("ownercode",clientAddressModel.get('ownercode'));
    		
    	}
	    
	   
    	clientModel.save(null,{
		
    				success : function(model, response, options){
			            
    						CommonUtils.showSuccessMessage("Client details save sucessfully!!");
    					
    						me.getAllClients();

    				},
    				error: function(model, response, options){
    						
    						if (response.status === 500) {
				
		    						var template = _.template(genericMessageTemplate);
	   		    		  
		    						var renderData = {
	   		    			  
		    									errorMessage:"There was some unexpected error. Please Try again or report the Problem",
		    						};
	   		    		  
		    						$("#showADMain").html($(me.el).html(template(renderData)));
    						}
    						
    				}
    				
    	});    	

    },
    
 
    viewClientProfile:function(ev){
    	
    		var me = this;
    		
    		me.clientId =  $(ev.currentTarget).attr("clientId");
    
    		var clientProfileModel = new CommonModel();
    		
    		clientProfileModel.set("clientId", me.clientId);
    	
    		clientProfileModel.url=CommonUtils.get("projectUrl")+"/rest/client/clientProfilelist"
    	
    		clientProfileModel.save(null,{
    		
    					  success : function(model, response, options){
    			
					    			var clientProjectResModel = new CommonModel(response);
					    			me.collection = new CommonCollection(clientProjectResModel);
					    			me.getOrderCountforClient();

    					  },
    					  error: function(model, response, options){
    						  
    						  		if (response.status === 500) {
    				
    						  				var template = _.template(genericMessageTemplate);
		    		  
    						  				var renderData = {
    						  						
    						  						errorMessage:"There was some unexpected error. Please Try again or report the Problem",
    						  						
    						  				};
		    		  
    						  				$("#showADMain").html($(me.el).html(template(renderData)));
    						  				
    						  		}
    						  		
    					  }
    					  
    		});
    		
    },
    
    getOrderCountforClient:function(){
    	
			var me = this;
	
			var orderCountforClientModel = new CommonModel();
			
			orderCountforClientModel.set("clientId", me.clientId);
		
			orderCountforClientModel.url=CommonUtils.get("projectUrl")+"/rest/client/getOrderCountforClient"
		
			orderCountforClientModel.save(null,{
			
						  success : function(model, response, options){
				
					    			var orderCountforClientResModel = new CommonModel(response);
					    			me.orderCountforClientResCollection = new CommonCollection(orderCountforClientResModel);
					    			me.getUpcomingAppointmentForClient();
	
						  },
						  error: function(model, response, options){
							  
							  		if (response.status === 500) {
					
							  				var template = _.template(genericMessageTemplate);
		    		  
							  				var renderData = {
							  						
							  						errorMessage:"There was some unexpected error. Please Try again or report the Problem",
							  						
							  				};
		    		  
							  				$("#showADMain").html($(me.el).html(template(renderData)));
							  				
							  		}
							  		
						  }
						  
			});
			
	},
	
	getUpcomingAppointmentForClient:function(){ 
    	
			var me = this;
	
			me.upcomingAppointmentForClientcollection.url=CommonUtils.get("projectUrl")+"/rest/client/getUpcomingAppointmentForClient?clientId="+me.clientId;
			
			me.upcomingAppointmentForClientcollection.fetch({
				   
			      cache:false,
			   
			      success: function (model, response, options) {			    	
			    	
			    	  				  me.getAppointmentHistoryForClient();
	  		
	  	          },error:function(model, xhr, options){
	  		
	  		                          me.renderUsersNotFoundTemplate();  
	  		                          
	  	          }
	  	          
		    });
			
	},
	
	
	
	
	 getAppointmentHistoryForClient:function(){ 
	    	
			var me = this;
	
			me.appointmentHistoryForClientcollection.url=CommonUtils.get("projectUrl")+"/rest/client/getAppointmentHistoryForClient?clientId="+me.clientId;
			
			me.appointmentHistoryForClientcollection.fetch({
				   
			      cache:false,
			   
			      success: function (model, response, options) {			    	
			    	
			    	  				  me.renderCltProList();
	  		
	  	          },error:function(model, xhr, options){
	  		
	  		                          me.renderUsersNotFoundTemplate();  
	  		                          
	  	          }
	  	          
		    });
			
	},
	
    renderCltProList:function(){
  	   
    		var me=this;
  	
    		if(me.collection.length > 0){
 		   
    				var renderData = {					   
 				   
    							clietProfiles:me.collection.models,
    							
    							appointmentCount : me.orderCountforClientResCollection.models,
    							
    							upcomingAppointmentList : me.upcomingAppointmentForClientcollection.models,
    							
    							appointmentHistoryList : me.appointmentHistoryForClientcollection.models,
 		    		 
    							errorMsg:"Error Message"

    				}; 
 	   
    				var template = _.template(ClientsProfileTemplate);
 		     
    				$("#showADMain").html($(this.el).html(template(renderData))); 
    				me.delegateEvents();
 		      
    		}
    		
    		

  	},
  	
  	 clients_info:function(){
     	
 		new ClientsView().getAllClients();
 		
 },
  	
  	editClients:function(ev){
		    	
		  		var me = this;
		  		
				me.clientId = $(ev.currentTarget).attr("clientId");
		    	
		    	me.clientEditModel = new CommonModel();	
		    	
		    	me.clientEditModel.set("clientId", me.clientId);
		    	
		    	me.clientEditModel.set("userId", CommonUtils.getUser("userId"))
		    	
		    	me.clientEditModel.url = CommonUtils.get("projectUrl")+"/rest/client/clientEditlist"
		    	
		    	me.clientEditModel.save(null,{
		    		
							  success : function(model, response, options){
								 
						    			var clientEditResModel = new CommonModel(response);
						    			me.clientEditcollection = new CommonCollection(clientEditResModel);
						    			me.renderClientEditList();
						    			
							  	},
							  error: function(model, response, options){
										  
								  		if (response.status === 500) {
						
								  			    var template = _.template(genericMessageTemplate);
						  
								  				var renderData = {
								  						
								  						errorMessage:"There was some unexpected error. Please Try again or report the Problem",
								  				};
						  
								  				$("#showADMain").html($(me.el).html(template(renderData)));
								  				
								  		}
							  	}
					  	
		          });
    
    },
    
    renderClientEditList:function(){

    	var me=this;
    	
    	    if(me.clientEditcollection.length > 0){
   		   
				   		     var renderData = {					   
				   				   
				   				   	clientEditList : me.clientEditcollection.models
				
				   		      }; 
				   	   
				   		     var template = _.template(EditClientsTemplate);
				   		     
				   		     $("#showADMain").html($(this.el).html(template(renderData))); 
				   		   
				   		     me.delegateEvents();
   		     
   			}
    	    
    }, 
    
    updateEditClientDetail:function(){
        
	    	var me = this;
	       	
	       	var updateEditClientsDetailsData = CommonUtils.getFormObj("editClientsDetails-form");
	       /*	console.log("updateClientEditData"+updateEditClientsDetailsData);*/
	       	
	       	var updateEditClientsAddressData = CommonUtils.getFormObj("editClientsAddressDetails-form");
	    	/*console.log("updateEditClientsAddressData"+updateEditClientsAddressData);*/
	    	
	       	me.updateClientEditDataModel = new CommonModel(updateEditClientsDetailsData);
	       	
	       	me.updateClientAddressDataModel = new CommonModel(updateEditClientsAddressData);
	       	
	       	me.updateClientEditDataModel.set("id", CommonUtils.getUser("organisationId"));
	       	
	       	me.updateClientEditDataModel.set("clientId",me.clientId); 
	       	
	       	/*console.log("in update"+me.updateClientEditDataModel);*/
	       	
	       	var notificationSendBy = $("#notificationSendBy option:selected").val();
	       	
	       	me.updateClientEditDataModel.url=CommonUtils.get("projectUrl")+"/rest/client/updateClientEditlist";
	       	
	       	/*var gender = $("input[name=gender]:checked").val();
	        me.updateClientEditDataModel.set("gender",gender);
			
			var maritalStatus = $("input[name=maritalStatus]:checked").val();
			me.updateClientEditDataModel.set("maritalStatus",maritalStatus);*/
		
			me.updateClientEditDataModel.set("notificationSendBy",notificationSendBy);
	       	
			if (me.updateClientAddressDataModel != null)
	    	{
	    		
	    		me.updateClientEditDataModel.set("clientAddress",me.updateClientAddressDataModel.get('clientAddress'));
	    		me.updateClientEditDataModel.set("ownercity",me.updateClientAddressDataModel.get('ownercity'));
	    		me.updateClientEditDataModel.set("ownerstate",me.updateClientAddressDataModel.get('ownerstate'));
	    		me.updateClientEditDataModel.set("ownercode",me.updateClientAddressDataModel.get('ownercode'));
	    		
	    	}  	
	       	   	
	       	me.updateClientEditDataModel.save(null,{
	       		
		       		success : function(model, response, options){
		       			
		       					CommonUtils.showSuccessMessage("Client details updated sucessfully!!");
		       			        
		       					me.getAllClients();
		       		},
		       		
		       		error: function(model, response, options){
		       			
		       				/*	if (response.status === 500) {
		    				
		       								var template = _.template(genericMessageTemplate);
		   		    		  
		       								var renderData = {
		       										
		       										errorMessage:"There was some unexpected error. Please Try again or report the Problem",
		       								};
		   		    		  
		       								$("#showADMain").html($(me.el).html(template(renderData)));
		       					}*/
		       					
		       		}
	       		
	       	 });

    },
  	
    
    bookNewOrder:function(ev){
    	
    	/*var clientId =  $(ev.currentTarget).attr("id");*/
    	
    			new BookOrderView().bookOrderForSelectedClient(ev);
    	
    },
    
    contact:function(){
    		
			    $("#showADMain").html($(this.el).html(_.template(ContactTemplate)));
			 		
			 	this.delegateEvents();
    	
    },
    
    feedback:function(){
		
	 	me.getAllFeedback();

    },
    
    getAllFeedback:function(){

		var me=this;
		   
		me.showFeedbackCollection.url = CommonUtils.get("projectUrl")+"/rest/booking/getAllFeedback?branchId="+CommonUtils.getBranch("branchId");
	   
	    me.showFeedbackCollection.fetch({
		   
		      cache:false,
		   
		      success: function (model, response, options) {			    	
		    	
		    	                  me.renderFeedbackList();
  		
  	          },error:function(model, xhr, options){
  		
  		                          me.renderUsersNotFoundTemplate();  
  		                          
  	          }
  	          
	    });
	    

    },
    
    renderFeedbackList:function(){
    	
    	        var me = this;
       
   	            var renderData = {
   			               
   	            		feedbackList:me.showFeedbackCollection.models,
    		            errorMsg:"Error Message"
                
   	            }; 
   	 
   
   	            var template = _.template(ShowFeedBackTemplate);
    
                $("#showADMain").html($(this.el).html(template(renderData)));
   	 
                var responsiveHelper_dt_basic = undefined;
        		var responsiveHelper_datatable_fixed_column = undefined;
        		var responsiveHelper_datatable_col_reorder = undefined;
        		var responsiveHelper_datatable_tabletools = undefined;
        		
        		var breakpointDefinition = {
        			tablet : 1024,
        			phone : 480
        		};

        		$('#dt_basic').dataTable({
        			// Tabletools options: 
    				//   https://datatables.net/extensions/tabletools/button_options
    				"sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>"+
    						"t"+
    						"<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
    		        "oTableTools": {
    		        	 "aButtons": [
    		             "copy",
    		             "csv",
    		             "xls",
    		                {
    		                    "sExtends": "pdf",
    		                    "sTitle": "SmartAdmin_PDF",
    		                    "sPdfMessage": "SmartAdmin PDF Export",
    		                    "sPdfSize": "letter"
    		                },
    		             	{
    	                    	"sExtends": "print",
    	                    	"sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
    	                	}
    		             ],
    		            "sSwfPath": "js/plugin/datatables/swf/copy_csv_xls_pdf.swf"
    		        },
    				"autoWidth" : true,
    				"preDrawCallback" : function() {
    					// Initialize the responsive datatables helper once.
    					if (!responsiveHelper_datatable_tabletools) {
    						responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
    					}
    				},
    				"rowCallback" : function(nRow) {
    					responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
    				},
    				"drawCallback" : function(oSettings) {
    					responsiveHelper_datatable_tabletools.respond();
    				}
    			});
	    
     this.delegateEvents();

    },
    
    saveContactBtn:function(){
    	
    	var me = this;
    	
    	var formData = CommonUtils.getFormDataAsJSON("#contact-form .input","input"); 
    	
    	var contactModel = new CommonModel(formData);
    	
    	contactModel.set("userId", CommonUtils.getUser("userId"));
    	
    	var message = $('#message').val();
    	
    	contactModel.set("message", message);
    	
    	contactModel.url= CommonUtils.get("projectUrl")+"/rest/client/saveContact";
    	
    	console.log("contactModel"+contactModel);
    	
    	contactModel.save(null,{
    		
    				success : function(model, response, options){
    			            
    				    	CommonUtils.showSuccessMessage("Contact Details save sucessfully!!");

    				},
    				
    				error: function(model, response, options){
    						
    				}
    				
    	 });
	
    },
    
    getOrderDetailsInClient:function(e){
  	  		
  	  		new OrderStatusView().getOrderDetailsInClient(e);
  	  		
    }
     
  });
  
  
  
  return ClientsView;
  
});